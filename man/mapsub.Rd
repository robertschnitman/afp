% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mapsub.r
\name{mapsub}
\alias{mapsub}
\title{Apply function over a collection and then substitute values}
\usage{
mapsub(f, p, x, out_true, ...)
}
\arguments{
\item{f}{A function to apply to the collection.}

\item{p}{A Predicate function.}

\item{x}{A collection, such as a a list, matrix, or data frame.}

\item{...}{Arguments passed to \code{mapply}.}
}
\description{
After mapping a function over a dataset, substituting specific values may be warranted. For example, a percent change between two periods cannot be calculated formally if the first of them is 0, which is indivisible. At that point, substituting a 1 (for 100%) would avoid an `Inf`` value in the output.

As such, \code{mapsub} facilitates this process by calling \code{\link{mapply}} and \code{\link{ifelse}}.
}
\examples{
# Example 1 - Replace even, rounded means with 1.
is.even <- function(k) k \%\% 2 == 0
mapsub(function(x) floor(mean(x)), is.even, mtcars, 1)

# Example 2 - Redact a greeting due to their boring name.
people <- c("Aoi", "Tae Min", "Kali", "Robert")
myname <- function(x) paste0("My name is ", x)
cutoff <- function(x) grepl("Robert", x)
mapsub(myname, cutoff, people, "REDACTED - boring name (probably a boring person)")

}
\seealso{
\url{https://github.com/robertschnitman/afp}, \url{https://github.com/robertschnitman/afpj/blob/master/src/mapsub.jl}, \code{\link{mapply}}, \code{\link{ifelse}}
}
