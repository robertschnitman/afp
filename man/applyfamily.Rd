% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/applyfamily.R
\name{applyfamily}
\alias{applyfamily}
\alias{apply}
\title{Naming and input consistency within the Base R *apply() family.}
\usage{
apply(f, x, m, ...) # \code{\link{apply}}
applyl(f, x, ...)  # \code{\link{lapply}}
applym(f, ..., moreargs = NULL, simplify = TRUE, use.names = TRUE) # \code{\link{mapply}}
applys(f, x, ..., simplify = TRUE, use.names = TRUE) # \code{\link{sapply}}
applyt(f = NULL, x, index, ..., default = NA, simplify = TRUE) # \code{\link{tapply}}
applyr(f, x, classes = 'ANY', default = NULL, how = c("unlist", "replace", "list"), ...) # \code{\link{rapply}}
applyv(f, x, f.value, ..., use.names = TRUE) # \code{\link{vapply}}
}
\arguments{
\item{f}{Function.}

\item{x}{Object.}

\item{m}{Margin. See \code{\link{apply}}.}

\item{...}{Inputs passed to the respective \code{*apply} family.}

\item{moreargs}{Additional arguments to the given function. See \code{\link{mapply}}.}

\item{simplify}{Boolean value determines whether the output is an array or list. See \code{\link{mapply}}, \code{\link{sapply}}, and \code{\link{tapply}}.}

\item{use.names}{Determines whether the output uses names if defiened in \code{x}. See \code{\link{mapply}}, \code{\link{sapply}}, and \code{\link{vapply}}.}

\item{index}{List of factors that is the same length as \code{x}. See \code{\link{tapply}}.}

\item{default}{The default value of any missing element (if the output is an array). See \code{\link{tapply}}.}

\item{classes}{Vector of \code{\link{class}} names.See \code{\link{rapply}}.}

\item{how}{Determines whether the output is an array, list, or replaces elements of some original list. See \code{\link{rapply}}}

\item{f.value}{Generalized vector that establishes the return value from \code{f}. Useful for type-checking. See \code{\link{vapply}}}
}
\description{
Consistent naming and inputs for the \code{\link{*apply}} family--they all start with "apply", and the first two inputs are the function and object.
}
\details{
The naming scheme converts the \code{*apply} prefixes into suffixes (e.g. \code{applys} instead of \code{sapply}). The first input is a function \code{f}, while the second parameter is an object \code{x}. The order of the rest of the inputs follows the same pattern in their respective functions on which they are based.
}
\seealso{
\url{https://github.com/robertschnitman/afp}, \code{\link{apply}}, \code{\link{lapply}}, \code{\link{sapply}}, \code{\link{mapply}}
}
