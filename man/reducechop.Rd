% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reducechop.R
\name{reducechop}
\alias{reducechop}
\title{Reduce a 2D dataset by a given margin.}
\usage{
reducechop(o, x, m = 2, ...)
}
\arguments{
\item{o}{A binary operator. Typically arithmetic operators, but can be another (binary) function.}

\item{x}{A matrix or data frame.}

\item{m}{Margin. 1 = row-wise; 2 = column-wise (default). See \code{\link{apply}}.}

\item{...}{Arguments passed to \code{\link{Reduce}}.}
}
\value{
Vector.
}
\description{
Reduce a 2D dataset by a given margin.
}
\details{
Effectively, this function calls \code{\link{apply}} to determine whether \code{\link{Reduce}} is mapped over columns or rows. 

By default, \code{reducechop} will execute over columns on the basis that row-wise application is equivalent to \code{Reduce}; however, \code{reducechop(..., m = 1)} is explicit about the execution.
}
\examples{
reducechop(`+`, mtcars, 2) # Column-wise (default).
reducechop(`/`, mtcars, 1) # Row-wise. Equivalent to Reduce(`/`, mtcars).  

}
\seealso{
\url{https://github.com/robertschnitman/afp}, \code{\link{Reduce}}, \code{\link{apply}}
\code{mapreduce} from Julia:\url{https://docs.julialang.org/en/v0.6.1/stdlib/collections/#Base.mapreduce-NTuple{4,Any}}
\code{mapslices} from Julia:\url{https://docs.julialang.org/en/v0.6.2/stdlib/arrays/#Base.mapslices}
Original \code{reducechop}: \url{https://github.com/robertschnitman/afpj/blob/master/src/reducechop.jl}
}
